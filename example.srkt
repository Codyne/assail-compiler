(print "Hello World!")
(print "Hello") (print "World!")
(print (string-ref "Hello World!" 6))
(print (make-string 7 #\w))
(print (make-string 7 (string-ref "Hello world!" 6)))
(print (integer? 6))
(print (integer? #\b))
(print (= (/ 8 4) 2))
(print (if (= (/ 8 4) 2) #t #f))
(print (if (< (* 8 8) 64) #t #f))
(print (abs -10))
(print (cond [(zero? 1) 2] [(zero? (sub1 1)) 4] [else 3]))
(print (if (zero? (if (zero? 0) 1 0)) (if (zero? 1) 1 2) 7))
(let ((x 7)) (print x))
(print (car (cons 1 2)))
(print (cdr (cons 1 2)))
